// Code generated by MockGen. DO NOT EDIT.
// Source: repository/transactions_interface.go

// Package mock_repository is a generated GoMock package.
package repository

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/saskamegaprogrammist/userBalanceService/models"
	reflect "reflect"
)

// MockTransactionsRepoI is a mock of TransactionsRepoI interface
type MockTransactionsRepoI struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionsRepoIMockRecorder
}

// MockTransactionsRepoIMockRecorder is the mock recorder for MockTransactionsRepoI
type MockTransactionsRepoIMockRecorder struct {
	mock *MockTransactionsRepoI
}

// NewMockTransactionsRepoI creates a new mock instance
func NewMockTransactionsRepoI(ctrl *gomock.Controller) *MockTransactionsRepoI {
	mock := &MockTransactionsRepoI{ctrl: ctrl}
	mock.recorder = &MockTransactionsRepoIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransactionsRepoI) EXPECT() *MockTransactionsRepoIMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockTransactionsRepoI) Add(transaction *models.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", transaction)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add
func (mr *MockTransactionsRepoIMockRecorder) Add(transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockTransactionsRepoI)(nil).Add), transaction)
}

// GetUserTransactions mocks base method
func (m *MockTransactionsRepoI) GetUserTransactions(user *models.UserId, limit int, since, sort string, desc bool) ([]models.Transaction, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserTransactions", user, limit, since, sort, desc)
	ret0, _ := ret[0].([]models.Transaction)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetUserTransactions indicates an expected call of GetUserTransactions
func (mr *MockTransactionsRepoIMockRecorder) GetUserTransactions(user, limit, since, sort, desc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserTransactions", reflect.TypeOf((*MockTransactionsRepoI)(nil).GetUserTransactions), user, limit, since, sort, desc)
}
